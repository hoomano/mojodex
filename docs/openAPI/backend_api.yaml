openapi: 3.0.0
info:
  title: Mojodex API Backend
  version: 1.0.0
tags:
  - name: Application
    description: Routes called from the application
  - name: Background
    description: Routes called from the background
  - name: Scheduler
    description: Routes called from the scheduler
  - name: Backoffice
    description: Routes called from the backoffice
  - name: Purchase updater
    description: Routes called from the purchase updater
  - name: External service
    description: Routes called from an external service

paths:
  /calendar_suggestion:
    put:
      tags:
        - Application
      summary: Put a new calendar suggestion in backend and return waiting message
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - user_planning
              properties:
                datetime:
                  type: string
                  format: date-time
                user_planning:
                  type: array
                  items:
                    type: object
                version:
                  type: string
                use_placeholder:
                  type: boolean
      responses:
        '200':
          description: Calendar suggestion and waiting message returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  calendar_suggestion_pk:
                    type: integer
                  waiting_message:
                    type: string
                  ready_message:
                    type: string
        '400':
          description: Error in getting calendar suggestion
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Application
      summary: Get a calendar suggestion from backend
      parameters:
          - in: query
            name: datetime
            required: true
            schema:
             type: string
             format: date-time
          - in: query
            name: calendar_suggestion_pk
            required: true
            schema:
             type: integer
          - name: version
            in: query
            required: true
            schema:
             type: string
          - name: Authorization
            in: header
            required: true
            schema:
             type: string
      responses:
        '200':
          description: Calendar suggestion text returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  calendar_suggestion_pk:
                    type: integer
                  suggestion_text:
                    type: string
                  message_title:
                    type: string
                  message_emoji:
                    type: string
                  task_pk:
                    type: integer
        '404':
          description: Calendar suggestion not found for this user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '400':
          description: Error in getting calendar suggestion text
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Application
      summary: Answer calendar suggestion
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - calendar_suggestion_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                calendar_suggestion_pk:
                  type: integer
                user_reacted:
                  type: boolean
                user_task_execution_pk:
                  type: integer
      responses:
        '200':
          description: Answer to calendar suggestion treated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '404':
          description: Calendar suggestion not found for this user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '400':
          description: Error in treating answer to calendar suggestion
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /company:
    put:
      tags:
        - Application
      summary: Create or update a company based on the provided website URL
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - website_url
              properties:
                datetime:
                  type: string
                  format: date-time
                website_url:
                  type: string
                  format: uri
      responses:
        '200':
          description: Company created or updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  company_pk:
                    type: integer
                  company_emoji:
                    type: string
                  company_name:
                    type: string
                  company_description:
                    type: string
        '400':
          description: Invalid URL provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Application
      summary: Update company information based on user feedback
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
                feedback:
                  type: string
                correct:
                  type: boolean
      responses:
        '200':
          description: Company information updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  company_pk:
                    type: integer
                  company_emoji:
                    type: string
                  company_name:
                    type: string
                  company_description:
                    type: string
        '400':
          description: Error in updating company information
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /device:
    put:
      tags:
        - Application
      summary: Create a new device for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - fcm_token
              properties:
                datetime:
                  type: string
                  format: date-time
                fcm_token:
                  type: string
      responses:
        '200':
          description: Device created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  device_pk:
                    type: integer
        '400':
          description: Error in device creation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /error:
    put:
      tags:
        - Application
      summary: Log an error event for a given user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - error
              properties:
                datetime:
                  type: string
                  format: date-time
                  description: The timestamp when the error occurred
                error:
                  type: string
                  description: A description of the error
                notify_admin:
                  type: boolean
                  default: false
                  description: Whether to notify the admin about the error
                session_id:
                  type: string
                  description: Optional session ID associated with the error event
      responses:
        '200':
          description: Error event logged successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    description: A success message indicating the error was logged
        '400':
          description: Bad request, such as missing JSON body or required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: An error message indicating the reason for the bad request
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /event:
    put:
      tags:
        - Background
      summary: Add a new event for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - user_id
                - message
                - event_type
              properties:
                datetime:
                  type: string
                  format: date-time
                user_id:
                  type: string
                message:
                  type: object
                  properties:
                    title:
                      type: string
                    body:
                      type: string
                    subject:
                      type: string
                    email:
                      type: string
                event_type:
                  type: string
                data:
                  type: object
                  additionalProperties: true
      responses:
        '200':
          description: Event created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  event_pk:
                    type: integer
        '400':
          description: Invalid request or missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Error occurred while creating the event
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /check_disengaged_free_trial_users:
    post:
      tags:
        - Scheduler
      summary: Check engagement of users with active free and limited products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
                n_disengaged_users:
                  type: integer
                  default: 50
                offset:
                  type: integer
                  default: 0
      responses:
        '200':
          description: List of disengaged user IDs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_ids:
                    type: array
                    items:
                      type: string
        '400':
          description: Bad request, missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, missing or wrong secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /onboarding:
    put:
      tags:
        - Application
      summary: Set the onboarding presented date for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Onboarding presented date set successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
        '400':
          description: Error setting onboarding presented date
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Application
      summary: Get the onboarding presented status for a user
      parameters:
        - name: datetime
          in: query
          required: true
          description: The current date and time
          schema:
            type: string
            format: date-time
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Onboarding presented status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  onboarding_presented:
                    type: boolean
        '400':
          description: Error asking for onboarding presented status
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /produced_text:
    get:
      tags:
        - Application
      summary: Retrieve produced texts for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: Timestamp of the request
          schema:
            type: string
            format: date-time
        - name: produced_text_pk
          in: query
          required: false
          description: Primary key of the produced text to retrieve
          schema:
            type: integer
        - name: n_produced_texts
          in: query
          required: false
          description: Number of produced texts to retrieve
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: Offset for pagination
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved produced texts
          content:
            application/json:
              schema:
                type: object
                properties:
                  produced_texts:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProducedText'
        '400':
          description: Bad request due to missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Error occurred while retrieving produced texts
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Application
      summary: Save a new produced text or update an existing one
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - production
              properties:
                datetime:
                  type: string
                  format: date-time
                produced_text_pk:
                  type: integer
                production:
                  type: string
                title:
                  type: string
      responses:
        '200':
          description: Successfully saved produced text
          content:
            application/json:
              schema:
                type: object
                properties:
                  produced_text_pk:
                    type: integer
        '400':
          description: Bad request due to missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Error occurred while saving produced text
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - Application
      summary: Delete a produced text
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: Timestamp of the request
          schema:
            type: string
            format: date-time
        - name: produced_text_pk
          in: query
          required: true
          description: Primary key of the produced text to delete
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted produced text
          content:
            application/json:
              schema:
                type: object
                properties:
                  produced_text_pk:
                    type: integer
        '400':
          description: Bad request due to missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Error occurred while deleting produced text
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /product_category:
    put:
      tags:
        - Backoffice
      summary: Create a new product category
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - label
                - displayed_data
                - emoji
                - implicit_goal
              properties:
                datetime:
                  type: string
                  format: date-time
                label:
                  type: string
                displayed_data:
                  type: array
                  items:
                    type: object
                    required:
                      - language_code
                      - name_for_user
                      - description_for_user
                    properties:
                      language_code:
                        type: string
                      name_for_user:
                        type: string
                      description_for_user:
                        type: string
                emoji:
                  type: string
                implicit_goal:
                  type: string
      responses:
        '200':
          description: Product category created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_category_pk:
                    type: integer
        '400':
          description: Bad request with missing fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while creating product category
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Backoffice
      summary: Update an existing product category
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - product_category_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                product_category_pk:
                  type: integer
                visible:
                  type: boolean
                label:
                  type: string
                emoji:
                  type: string
                displayed_data:
                  type: array
                  items:
                    type: object
                    properties:
                      language_code:
                        type: string
                      name_for_user:
                        type: string
                      description_for_user:
                        type: string
      responses:
        '200':
          description: Product category updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_category_pk:
                    type: integer
        '400':
          description: Bad request with missing fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while updating product category
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Application
      summary: Get all visible product categories for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of visible product categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_categories:
                    type: array
                    items:
                      type: object
                      properties:
                        product_category_pk:
                          type: integer
                        emoji:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
        '400':
          description: Bad request with missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while getting product categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /product_task_association:
    put:
      tags:
        - Backoffice
      summary: Create a new product_task_association
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - product_pk
                - task_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                product_pk:
                  type: integer
                task_pk:
                  type: integer
      responses:
        '200':
          description: Product task association created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_task_association_pk:
                    type: integer
        '400':
          description: Bad request with missing fields or association already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while creating product_task_association
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /subscription_end:
    post:
      tags:
        - External service
      summary: Stripe webhook endpoint for handling the end of a subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
             # properties:
              # The properties are not explicitly defined in the provided code,
              # but we can assume that the request will be a JSON payload sent by Stripe.
      responses:
        '200':
          description: Purchase ended successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_pk:
                    type: integer
        '400':
          description: Request must be JSON or purchase with subscription_stripe_id does not exist in mojodex db
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: Error in stripe webhook ending purchase
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Unhandled event type
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /task:
    put:
      tags:
        - Backoffice
      summary: Create a new task
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - platforms
                - name_for_system
                - definition_for_system
                - final_instruction
                - output_format_instruction_title
                - output_format_instruction_draft
                - infos_to_extract
                - icon
                - task_displayed_data
                - predefined_actions
                - output_type
              properties:
                datetime:
                  type: string
                  format: date-time
                platforms:
                  type: array
                  items:
                    type: string
                name_for_system:
                  type: string
                definition_for_system:
                  type: string
                final_instruction:
                  type: string
                output_format_instruction_title:
                  type: string
                output_format_instruction_draft:
                  type: string
                infos_to_extract:
                  type: array
                  items:
                    type: object
                icon:
                  type: string
                task_displayed_data:
                  type: array
                  items:
                    type: object
                predefined_actions:
                  type: array
                  items:
                    type: object
                output_type:
                  type: string
      responses:
        '200':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_pk:
                    type: integer
        '400':
          description: Bad request with missing or invalid fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while creating task
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Backoffice
      summary: Edit any field of a task
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                datetime:
                  type: string
                  format: date-time
                task_pk:
                  type: integer
                platforms:
                  type: array
                  items:
                    type: string
                task_displayed_data:
                  type: array
                  items:
                    type: object
                predefined_actions:
                  type: array
                  items:
                    type: object
                name_for_system:
                  type: string
                definition_for_system:
                  type: string
                final_instruction:
                  type: string
                output_format_instruction_title:
                  type: string
                output_format_instruction_draft:
                  type: string
                infos_to_extract:
                  type: array
                  items:
                    type: object
                icon:
                  type: string
                output_type:
                  type: string
      responses:
        '200':
          description: Task edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_pk:
                    type: integer
        '400':
          description: Bad request with missing or invalid fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while editing task
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Backoffice
      summary: Get JSON of a task
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: task_pk
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task JSON retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  platforms:
                    type: array
                    items:
                      type: string
                  predefined_actions:
                    type: array
                    items:
                      type: object
                  task_displayed_data:
                    type: array
                    items:
                      type: object
                  name_for_system:
                    type: string
                  definition_for_system:
                    type: string
                  final_instruction:
                    type: string
                  output_format_instruction_title:
                    type: string
                  output_format_instruction_draft:
                    type: string
                  output_type:
                    type: string
                  icon:
                    type: string
                  infos_to_extract:
                    type: array
                    items:
                      type: object
        '400':
          description: Bad request with missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while getting task JSON
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /task_json:
    post:
      tags:
        - Backoffice
      summary: Generate json configuration file of a task from requirements description
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - task_requirements
              properties:
                datetime:
                  type: string
                  format: date-time
                task_requirements:
                  type: string
      responses:
        '200':
          description: Task JSON created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  datetime:
                    type: string
                    format: date-time
                  platforms:
                    type: array
                    items:
                      type: string
                  predefined_actions:
                    type: array
                    items:
                      type: object
                  task_displayed_data:
                    type: array
                    items:
                      type: object
                  name_for_system:
                    type: string
                  definition_for_system:
                    type: string
                  final_instruction:
                    type: string
                  output_format_instruction_title:
                    type: string
                  output_format_instruction_draft:
                    type: string
                  output_type:
                    type: string
                  icon:
                    type: string
                  infos_to_extract:
                    type: array
                    items:
                      type: object
        '400':
          description: Bad request, missing fields or not a JSON request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error when creating new task
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /task_tool_query:
    put:
      tags:
        - Background
      summary: Add a new task tool query
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - query
                - task_tool_execution_fk
              properties:
                datetime:
                  type: string
                  format: date-time
                query:
                  type: string
                task_tool_execution_fk:
                  type: integer
      responses:
        '200':
          description: Task tool query created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_tool_query_pk:
                    type: integer
        '400':
          description: Bad request with missing fields or invalid request format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error during task tool query creation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Background
      summary: Edit an existing task tool query
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - result
                - task_tool_query_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                result:
                  type: string
                task_tool_query_pk:
                  type: integer
      responses:
        '200':
          description: Task tool query edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_tool_query_pk:
                    type: integer
        '400':
          description: Bad request with missing fields or invalid request format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error during task tool query editing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /text_type:
    put:
      tags:
        - Backoffice
      summary: Create a new text type
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - timestamp
                - text_type_name
              properties:
                timestamp:
                  type: string
                  format: date-time
                text_type_name:
                  type: string
      responses:
        '200':
          description: Text type created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  text_type_pk:
                    type: integer
        '400':
          description: Error in creating text type or missing field
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Backoffice
      summary: Get a list of existing text types
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: n_text_types
          schema:
            type: integer
            default: 50
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of text types retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  text_types:
                    type: array
                    items:
                      type: object
                      properties:
                        text_type_pk:
                          type: integer
                        name:
                          type: string
        '400':
          description: Error in retrieving text types or missing field
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /todo_daily_emails:
    post:
      tags:
        - Scheduler
      summary: Send daily emails with todos
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
                n_emails:
                  type: integer
                offset:
                  type: integer
      responses:
        '200':
          description: Daily emails sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_ids:
                    type: array
                    items:
                      type: string
        '400':
          description: Bad request, missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /todos:
    put:
      tags:
        - Background
      summary: Add a new todo
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - description
                - due_date
                - user_task_execution_fk
              properties:
                datetime:
                  type: string
                  format: date-time
                description:
                  type: string
                due_date:
                  type: string
                  format: date
                user_task_execution_fk:
                  type: integer
      responses:
        '200':
          description: Todo created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  todo_pk:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Forbidden - Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Application
      summary: Mark a todo as read or done
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
                mark_as_read:
                  type: boolean
                mark_as_done:
                  type: boolean
                todo_pk:
                  type: integer
                user_task_execution_fk:
                  type: integer
      responses:
        '200':
          description: Todo marked as read or done successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  todo_pk:
                    type: integer
                  user_task_execution_pk:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - Application
      summary: Delete a todo
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
          description: The current date and time
        - in: query
          name: todo_pk
          required: true
          schema:
            type: integer
          description: The primary key of the todo to delete
      responses:
        '200':
          description: Todo deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  todo_pk:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Application
      summary: Get todos for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
          description: The current date and time
        - in: query
          name: n_todos
          schema:
            type: integer
          description: The number of todos to return
        - in: query
          name: offset
          schema:
            type: integer
          description: The offset for pagination
        - in: query
          name: user_task_execution_fk
          schema:
            type: integer
          description: The foreign key of the user task execution
      responses:
        '200':
          description: Todos retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  todos:
                    type: array
                    items:
                      type: object
                      properties:
                        todo_pk:
                          type: integer
                        user_task_execution_fk:
                          type: integer
                        description:
                          type: string
                        scheduled_date:
                          type: string
                          format: date-time
                        completed:
                          type: string
                          format: date-time
                        creation_date:
                          type: string
                          format: date-time
                        read_by_user:
                          type: string
                          format: date-time
                  user_has_never_done_todo:
                    type: boolean
                  n_todos_not_read:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user:
    post:
      tags:
        - Application
      summary: Log in an existing user or register a new user with third-party tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - email
                - login_method
              properties:
                datetime:
                  type: string
                  format: date-time
                email:
                  type: string
                  format: email
                login_method:
                  type: string
                  enum:
                    - email_password
                    - microsoft
                    - google
                    - apple
                version:
                  type: string
                password:
                  type: string
                microsoft_token:
                  type: string
                google_token:
                  type: string
                apple_token:
                  type: string
      responses:
        '200':
          description: User logged in or registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  language_code:
                    type: string
                  name:
                    type: string
                  perception_token:
                    type: string
                  perception_usernamespace:
                    type: string
                  terms_and_conditions_agreed:
                    type: boolean
                  company_fk:
                    type: integer
                  emotion_engine_uri:
                    type: string
                  emotion_engine_uuid:
                    type: string
                  emotion_engine_token:
                    type: string
        '400':
          description: Error in user login or registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tags:
        - Application
      summary: Register a new user with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - email
                - name
                - password
              properties:
                datetime:
                  type: string
                  format: date-time
                email:
                  type: string
                  format: email
                name:
                  type: string
                password:
                  type: string
                version:
                  type: string
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  language_code:
                    type: string
                  name:
                    type: string
                  perception_token:
                    type: string
                  perception_usernamespace:
                    type: string
                  terms_and_conditions_agreed:
                    type: boolean
                  company_fk:
                    type: integer
                  emotion_engine_uri:
                    type: string
                  emotion_engine_uuid:
                    type: string
                  emotion_engine_token:
                    type: string
        '400':
          description: Error in user registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user_summary:
    post:
      tags:
        - Background
      summary: Update user summary
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - summary
                - session_id
              properties:
                datetime:
                  type: string
                  format: date-time
                summary:
                  type: string
                session_id:
                  type: string
      responses:
        '200':
          description: User summary updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad request, missing or invalid fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /calendar_suggestion_notifications:
    post:
      tags:
        - Scheduler
      summary: Send calendar suggestion notifications
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - since_date
                - until_date
              properties:
                datetime:
                  type: string
                  format: date-time
                since_date:
                  type: string
                  format: date-time
                until_date:
                  type: string
                  format: date-time
                n_notifications:
                  type: integer
                offset:
                  type: integer
      responses:
        '200':
          description: Calendar suggestion notifications sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  calendar_suggestion_pks:
                    type: array
                    items:
                      type: integer
        '400':
          description: Bad request, missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: Conflict or error while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /check_expired_purchases:
    post:
      tags:
        - Scheduler
      summary: Check for expired purchases and deactivate them
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: n_purchases
          required: false
          schema:
            type: integer
            default: 50
            minimum: 1
      responses:
        '200':
          description: Expired purchases checked and deactivated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_pks:
                    type: array
                    items:
                      type: integer
        '400':
          description: Invalid request or missing datetime in body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to missing or wrong secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /send_daily_emails:
    post:
      tags:
        - Scheduler
      summary: Send daily emails to users
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
                n_emails:
                  type: integer
                  default: 50
                offset:
                  type: integer
                  default: 0
      responses:
        '200':
          description: Daily emails sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_ids:
                    type: array
                    items:
                      type: string
        '400':
          description: Bad request, missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error occurred while sending daily emails
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /send_daily_notifications:
    post:
      tags:
        - Scheduler
      summary: Send daily notifications to users
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
                n_notifications:
                  type: integer
                  default: 50
                offset:
                  type: integer
                  default: 0
      responses:
        '200':
          description: Daily notifications sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_ids:
                    type: array
                    items:
                      type: string
        '400':
          description: Bad request, missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while sending notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /document:
    put:
      tags:
        - Background
      summary: Create a new document
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - name
                - document_type
                - user_id
              properties:
                datetime:
                  type: string
                  format: date-time
                name:
                  type: string
                document_type:
                  type: string
                user_id:
                  type: string
      responses:
        '200':
          description: Document created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_pk:
                    type: integer
        '400':
          description: Bad request, missing or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Forbidden, authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Background
      summary: Update an existing document
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - document_pk
                - update_date
              properties:
                datetime:
                  type: string
                  format: date-time
                document_pk:
                  type: integer
                update_date:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Document updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_pk:
                    type: integer
        '400':
          description: Bad request, missing or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Forbidden, authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /document_chunk:
    put:
      tags:
        - Background
      summary: Create a new document chunk
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - document_fk
                - chunk_index
                - chunk_text
                - embedding
              properties:
                datetime:
                  type: string
                  format: date-time
                document_fk:
                  type: integer
                chunk_index:
                  type: integer
                chunk_text:
                  type: string
                embedding:
                  type: array
                  items:
                    type: number
      responses:
        '200':
          description: Document chunk created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_chunk_pk:
                    type: integer
        '400':
          description: Bad request with missing keys or non-JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Background
      summary: Update an existing document chunk
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - chunk_pk
                - chunk_text
                - embedding
              properties:
                datetime:
                  type: string
                  format: date-time
                chunk_pk:
                  type: integer
                chunk_text:
                  type: string
                embedding:
                  type: array
                  items:
                    type: number
      responses:
        '200':
          description: Document chunk updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_chunk_pk:
                    type: integer
        '400':
          description: Bad request with missing keys or non-JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Document chunk not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - Background
      summary: Delete a document chunk
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: chunk_pk
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Document chunk deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_chunk_pk:
                    type: integer
        '400':
          description: Bad request with missing keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Document chunk not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Background
      summary: Retrieve document chunks based on a query
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: query
          required: true
          schema:
            type: string
        - in: query
          name: user_task_execution_pk
          required: true
          schema:
            type: integer
        - in: query
          name: task_name_for_system
          required: true
          schema:
            type: string
        - in: query
          name: top_k
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Document chunks retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_chunks:
                    type: array
                    items:
                      type: object
                      #properties:
                      # Define the properties of a document chunk object
        '400':
          description: Bad request with missing keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /extract_todos:
    post:
      tags:
        - Scheduler
      summary: Extract todos from user task executions
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Todos extracted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_task_execution_pks:
                    type: array
                    items:
                      type: integer
        '400':
          description: Bad request, JSON required or missing datetime
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error during todo extraction
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tags:
        - Background
      summary: Mark todo as extracted
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - user_task_execution_fk
              properties:
                datetime:
                  type: string
                  format: date-time
                user_task_execution_fk:
                  type: integer
      responses:
        '200':
          description: Todo marked as extracted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_task_execution_pk:
                    type: integer
        '400':
          description: Bad request, JSON required or missing key in body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User task execution not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error during marking todo as extracted
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /goal:
    put:
      tags:
        - Application
      summary: Update the goal for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - goal
              properties:
                datetime:
                  type: string
                  format: date-time
                goal:
                  type: string
      responses:
        '200':
          description: Goal updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Error in updating goal
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /home_chat:
    get:
      tags:
        - Application
      summary: Get initial chat message for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Initial chat message retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  home_chat_pk:
                    type: integer
                  session_id:
                    type: string
                  message_pk:
                    type: integer
                  message:
                    type: object
                    properties:
                      text:
                        type: string
                      type:
                        type: string
                      sender:
                        type: string
        '400':
          description: Missing field in request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Application
      summary: Create next home chat for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Home chat created successfully
        '400':
          description: Missing field in request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tags:
        - Scheduler
      summary: Prepare next week's first home chat
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - n_users
                - offset
              properties:
                datetime:
                  type: string
                  format: date-time
                n_users:
                  type: integer
                offset:
                  type: integer
      responses:
        '200':
          description: Next week's first home chat prepared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_ids:
                    type: array
                    items:
                      type: string
        '400':
          description: Missing field in request or request must be JSON
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /in_app_apple_purchase:
    post:
      tags:
        - External service
      summary: Handle Apple in-app purchase notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - signedPayload
              properties:
                signedPayload:
                  type: string
      responses:
        '200':
          description: Notification processed successfully
        '400':
          description: Error processing notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tags:
        - Application
      summary: Associate user_id to purchase and verify transaction
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - transaction_id
              properties:
                datetime:
                  type: string
                  format: date-time
                transaction_id:
                  type: string
      responses:
        '200':
          description: User associated with purchase successfully
        '400':
          description: Error associating user with purchase
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /language:
    post:
      tags:
        - Application
      summary: Set the language of the user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - language_code
              properties:
                datetime:
                  type: string
                  format: date-time
                language_code:
                  type: string
      responses:
        '200':
          description: Language updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Error updating language
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Application
      summary: Get the system language of the user
      parameters:
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: language_code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: System language retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  available_languages:
                    type: array
                    items:
                      type: string
                  language_json_file:
                    type: object
        '400':
          description: Error getting language
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /manual_purchase:
    put:
      tags:
        - Backoffice
      summary: Create manually a new purchase for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - user_id
                - product_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                user_id:
                  type: string
                product_pk:
                  type: integer
                custom_purchase_id:
                  type: string
      responses:
        '200':
          description: Purchase created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_pk:
                    type: integer
        '400':
          description: Bad request, missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while creating purchase
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Backoffice
      summary: Deactivate manually a purchase for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - purchase_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                purchase_pk:
                  type: integer
      responses:
        '200':
          description: Purchase deactivated successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request, missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while deactivating purchase
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /message:
    get:
      tags:
        - Application
      summary: Retrieve messages for a user session
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: Timestamp for the message retrieval
          schema:
            type: string
            format: date-time
        - name: session_id
          in: query
          required: true
          description: The ID of the session to retrieve messages from
          schema:
            type: string
        - name: offset_direction
          in: query
          required: false
          description: The direction for message offset, older or newer
          schema:
            type: string
            enum:
              - older
              - newer
        - name: n_messages
          in: query
          required: false
          description: The number of messages to retrieve
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: The offset for message retrieval
          schema:
            type: integer
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        message_pk:
                          type: string
                        sender:
                          type: string
                        message:
                          type: object
                          additionalProperties: true
                        audio:
                          type: boolean
                        in_error_state:
                          type: boolean
        '400':
          description: Bad request, missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Session not found for this user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /mojo_message:
    put:
      tags:
        - Background
      summary: Add a new mojo message
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - message
                - session_id
              properties:
                datetime:
                  type: string
                  format: date-time
                message:
                  type: string
                session_id:
                  type: string
      responses:
        '200':
          description: Mojo message added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_pk:
                    type: integer
        '400':
          description: Invalid request or missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /password:
    put:
      tags:
        - Application
      summary: Send a link to reset the password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - email
              properties:
                datetime:
                  type: string
                  format: date-time
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Error due to invalid request format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Email not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: Error sending reset password email
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Application
      summary: Reset the password using the token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Authorization
                - datetime
                - new_password
              properties:
                Authorization:
                  type: string
                datetime:
                  type: string
                  format: date-time
                new_password:
                  type: string
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Error due to invalid request format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Error due to invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: Error resetting password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /product:
    put:
      tags:
        - Backoffice
      summary: Create a new product
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - product_label
                - displayed_data
                - product_category_pk
                - product_stripe_id
                - product_apple_id
                - is_free
                - n_days_validity
                - n_tasks_limit
              properties:
                datetime:
                  type: string
                  format: date-time
                product_label:
                  type: string
                displayed_data:
                  type: array
                  items:
                    type: object
                    required:
                      - language_code
                      - name
                    properties:
                      language_code:
                        type: string
                      name:
                        type: string
                product_category_pk:
                  type: integer
                product_stripe_id:
                  type: string
                product_apple_id:
                  type: string
                is_free:
                  type: boolean
                n_days_validity:
                  type: integer
                n_tasks_limit:
                  type: integer
      responses:
        '200':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_pk:
                    type: integer
        '400':
          description: Bad request with missing fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while creating product
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Backoffice
      summary: Edit an existing product
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - product_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                product_pk:
                  type: integer
                label:
                  type: string
                product_category_fk:
                  type: integer
                displayed_data:
                  type: array
                  items:
                    type: object
                    required:
                      - language_code
                      - name
                    properties:
                      language_code:
                        type: string
                      name:
                        type: string
                product_stripe_id:
                  type: string
                product_apple_id:
                  type: string
                is_free:
                  type: boolean
                n_days_validity:
                  type: integer
                n_tasks_limit:
                  type: integer
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_pk:
                    type: integer
        '400':
          description: Bad request with missing fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error due to wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error while updating product
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /purchase:
    put:
      tags:
        - Application
      summary: Create an inactive purchase when a Stripe session is opened
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - stripe_session_id
              properties:
                datetime:
                  type: string
                  format: date-time
                stripe_session_id:
                  type: string
                version:
                  type: string
                product_stripe_id:
                  type: string
      responses:
        '200':
          description: Purchase added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_pk:
                    type: integer
        '400':
          description: Error adding purchase
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - External service
      summary: Stripe webhook to activate a purchase when payment is completed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: { }
      responses:
        '200':
          description: Purchase activated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_pk:
                    type: integer
        '400':
          description: Purchase session ID does not exist in the database
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: Error in Stripe webhook validating purchase
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Unhandled event type
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Application
      summary: Get user's active purchases and purchasable products
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved purchases and products
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_status:
                    type: string
                  current_product:
                    type: string
                  free_plan_remaining_days:
                    type: integer
                  purchasable_products:
                    type: array
                    items:
                      type: object
                      #properties:
                      # Define the properties of purchasable products here
                  current_purchases:
                    type: array
                    items:
                      type: object
                      #properties:
                      # Define the properties of current purchases here
                  last_expired_purchase:
                    type: object
                    #properties:
                    # Define the properties of the last expired purchase here
        '400':
          description: Error getting purchases
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /resource:
    put:
      tags:
        - Application
      summary: Create a MojoResource for a user
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - website_url
              properties:
                datetime:
                  type: string
                  format: date-time
                website_url:
                  type: string
      responses:
        '200':
          description: MojoResource created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Error creating MojoResource or website already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Application
      summary: Update a MojoResource for a user
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - document_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                document_pk:
                  type: string
                edition:
                  type: string
      responses:
        '200':
          description: MojoResource updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_pk:
                    type: string
        '400':
          description: Error updating MojoResource or document not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Document not found for this user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Application
      summary: Retrieve MojoResources for a user
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: The current date and time
          schema:
            type: string
            format: date-time
        - name: learned_by_mojo
          in: query
          required: true
          description: Filter for documents learned by Mojo
          schema:
            type: string
        - name: n_resources
          in: query
          description: The number of resources to retrieve
          schema:
            type: integer
        - name: offset
          in: query
          description: The offset for pagination
          schema:
            type: integer
      responses:
        '200':
          description: List of MojoResources retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        document_pk:
                          type: string
                        document_type:
                          type: string
                        name:
                          type: string
                        author:
                          type: string
                        creation_date:
                          type: string
                          format: date-time
                        last_update_date:
                          type: string
                          format: date-time
                        text:
                          type: string
        '400':
          description: Error retrieving documents or missing field
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - Application
      summary: Delete a MojoResource for a user
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: The current date and time
          schema:
            type: string
            format: date-time
        - name: document_pk
          in: query
          required: true
          description: The primary key of the document to delete
          schema:
            type: string
      responses:
        '200':
          description: MojoResource deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_pk:
                    type: string
        '400':
          description: Error deleting document or missing field
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Document not found for this user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /retrieve_produced_text:
    get:
      tags:
        - Background
      summary: Retrieve produced texts based on a query and other parameters
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Secret key for authentication
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
          description: Timestamp of the request
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: Query string to search for produced texts
        - in: query
          name: n_max
          required: true
          schema:
            type: integer
          description: Maximum number of produced texts to retrieve
        - in: query
          name: max_distance
          required: true
          schema:
            type: number
            format: float
          description: Maximum cosine distance for the nearest neighbor search
        - in: query
          name: user_id
          required: true
          schema:
            type: string
          description: User ID to filter the produced texts
        - in: query
          name: user_task_execution_pk
          required: true
          schema:
            type: string
          description: User task execution primary key to filter the produced texts
        - in: query
          name: task_name_for_system
          required: true
          schema:
            type: string
          description: System name of the task to filter the produced texts
      responses:
        '200':
          description: Successfully retrieved produced texts
          content:
            application/json:
              schema:
                type: object
                properties:
                  retrieved_produced_texts:
                    type: array
                    items:
                      type: object
                      properties:
                        user_task_execution_pk:
                          type: string
                        produced_text_title:
                          type: string
                        produced_text:
                          type: string
                        task_name:
                          type: string
                        task_icon:
                          type: string
        '400':
          description: Bad request, missing required parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /session:
    put:
      tags:
        - Application
      summary: Create a new session
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - platform
              properties:
                datetime:
                  type: string
                  format: date-time
                platform:
                  type: string
      responses:
        '200':
          description: Session created successfully
        '400':
          description: Error creating session
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Application
      summary: Get list of sessions
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: The current date and time
          schema:
            type: string
            format: date-time
        - name: n_sessions
          in: query
          description: The number of sessions to retrieve
          schema:
            type: integer
        - name: offset
          in: query
          description: The offset for pagination
          schema:
            type: integer
      responses:
        '200':
          description: List of sessions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessions:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        session_id:
                          type: string
        '400':
          description: Error getting sessions
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - Application
      summary: Delete a session
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: The current date and time
          schema:
            type: string
            format: date-time
        - name: session_id
          in: query
          required: true
          description: The ID of the session to delete
          schema:
            type: string
      responses:
        '200':
          description: Session deleted successfully
        '404':
          description: Session not found for this user
        '500':
          description: Error deleting session
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Background
      summary: Edit session (add title)
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - title
                - session_id
              properties:
                datetime:
                  type: string
                  format: date-time
                title:
                  type: string
                session_id:
                  type: string
      responses:
        '200':
          description: Session title updated successfully
        '400':
          description: Error updating session title
        '403':
          description: Missing Authorization secret in headers
  /task_tool_execution:
    post:
      tags:
        - Application
      summary: User validation for tool usage and launch execution
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - task_tool_execution_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                task_tool_execution_pk:
                  type: string
      responses:
        '200':
          description: TaskToolExecution launched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  message_pk:
                    type: string
        '400':
          description: Error due to missing field or TaskToolExecution not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Error while calling background task or other internal errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /terms_and_conditions:
    put:
      tags:
        - Application
      summary: Record the user's agreement to the terms and conditions
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Terms and conditions agreement added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Error adding terms and conditions agreement
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /text_edit_action:
    post:
      tags:
        - Application
      summary: Execute text edit actions
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - platform
                - produced_text_version_pk
                - text_edit_action_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                platform:
                  type: string
                produced_text_version_pk:
                  type: integer
                text_edit_action_pk:
                  type: integer
                message_pk:
                  type: integer
                version:
                  type: string
      responses:
        '200':
          description: Text edit action executed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message_pk:
                    type: integer
        '400':
          description: Error executing text edit action
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /timezone:
    post:
      tags:
        - Application
      summary: Update the user's timezone offset
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - timezone_offset
              properties:
                datetime:
                  type: string
                  format: date-time
                timezone_offset:
                  type: integer
                  format: int32
                  description: The timezone offset in minutes from UTC
      responses:
        '200':
          description: Timezone updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Error in updating timezone
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /todos_scheduling:
    put:
      tags:
        - Background
      summary: Add a new todo scheduling
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - todo_fk
                - argument
              properties:
                datetime:
                  type: string
                  format: date-time
                todo_fk:
                  type: integer
                argument:
                  type: string
                reschedule_date:
                  type: string
                  format: date
      responses:
        '200':
          description: Todo scheduling created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  todo_pk:
                    type: integer
                  todo_scheduling_pk:
                    type: integer
        '400':
          description: Invalid request or error creating new todo scheduling
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Scheduler
      summary: Reschedule todos for users based on timezone and other conditions
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
              properties:
                datetime:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Todos rescheduled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  todos_pk:
                    type: array
                    items:
                      type: integer
        '400':
          description: Invalid request or missing datetime in body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Error running extract todos
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user_message:
    put:
      tags:
        - Application
      summary: Receive and process a user message
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                session_id:
                  type: string
                message_id:
                  type: string
                message_pk:
                  type: string
                message_date:
                  type: string
                  format: date-time
                version:
                  type: string
                use_message_placeholder:
                  type: string
                use_draft_placeholder:
                  type: string
                text:
                  type: string
                file:
                  type: string
                  format: binary
              required:
                - session_id
                - message_id
                - message_date
                - version
      responses:
        '200':
          description: User message processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                  message_pk:
                    type: string
                  audio_duration:
                    type: number
                  message_id:
                    type: string
        '400':
          description: Error in processing user message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user_task:
    get:
      tags:
        - Application
      summary: Retrieve tasks associated with a user
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: Timestamp of the request
          schema:
            type: string
            format: date-time
        - name: platform
          in: query
          required: false
          description: The platform from which the request is made (default is 'webapp')
          schema:
            type: string
            default: webapp
        - name: version
          in: query
          required: false
          description: The version of the app making the request (default is '0.0.0')
          schema:
            type: string
            default: "0.0.0"
        - name: user_task_pk
          in: query
          required: false
          description: Primary key of a specific user task to retrieve
          schema:
            type: integer
        - name: n_user_tasks
          in: query
          required: false
          description: Number of user tasks to retrieve (default and maximum is 50)
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          required: false
          description: Offset for pagination of user tasks
          schema:
            type: integer
            default: 0
        - name: task_category_pk
          in: query
          required: false
          description: Primary key of the task category to filter tasks
          schema:
            type: integer
      responses:
        '200':
          description: A list of user tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        user_task_pk:
                          type: integer
                        task_pk:
                          type: integer
                        task_name:
                          type: string
                        task_description:
                          type: string
                        task_icon:
                          type: string
                        enabled:
                          type: boolean
        '400':
          description: Error due to missing field or invalid user_task_pk
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Error due to invalid platform or other internal errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user_task_execution:
    put:
      tags:
        - Application
      summary: Create a new user task execution
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - user_task_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                user_task_pk:
                  type: integer
                platform:
                  type: string
                  default: "webapp"
      responses:
        '200':
          description: User task execution created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_task_execution_pk:
                    type: integer
                  json_input:
                    type: array
                    items:
                      type: object
                  actions:
                    type: array
                    items:
                      type: object
                  text_edit_actions:
                    type: array
                    items:
                      type: object
                  session_id:
                    type: string
        '400':
          description: Bad request, missing or invalid fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '402':
          description: No purchase available to create a new task
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - Purchase updater
      summary: End a user task execution
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - user_task_execution_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                user_task_execution_pk:
                  type: integer
      responses:
        '200':
          description: User task execution ended successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_task_execution_pk:
                    type: integer
        '400':
          description: Bad request, missing or invalid fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Forbidden, authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Application
      summary: Retrieve user task executions or a specific user task execution
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: The current datetime
          schema:
            type: string
            format: date-time
        - name: user_task_execution_pk
          in: query
          required: false
          description: The primary key of the user task execution to retrieve
          schema:
            type: integer
        - name: n_user_task_executions
          in: query
          required: false
          description: The number of user task executions to retrieve
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: The offset for pagination
          schema:
            type: integer
        - name: search_filter
          in: query
          required: false
          description: A search filter to apply to the task executions
          schema:
            type: string
        - name: user_task_pks
          in: query
          required: false
          description: A list of user task primary keys to filter by
          schema:
            type: string
      responses:
        '200':
          description: User task executions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_task_executions:
                    type: array
                    items:
                      type: object
        '400':
          description: Bad request, missing or invalid fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - Application
      summary: Delete a user task execution
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: datetime
          in: query
          required: true
          description: The current datetime
          schema:
            type: string
            format: date-time
        - name: user_task_execution_pk
          in: query
          required: true
          description: The primary key of the user task execution to delete
          schema:
            type: integer
      responses:
        '200':
          description: User task execution deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_task_execution_pk:
                    type: integer
        '400':
          description: Bad request, missing or invalid fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User task execution not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user_task_execution_run:
    post:
      tags:
        - Application
      summary: Start a task_execution from a Form (webapp)
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - user_task_execution_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                user_task_execution_pk:
                  type: integer
                platform:
                  type: string
                  default: "webapp"
                version:
                  type: string
                inputs:
                  type: array
                  items:
                    type: object
                    required:
                      - input_name
                      - input_value
                    properties:
                      input_name:
                        type: string
                      input_value:
                        type: string
                use_message_placeholder:
                  type: boolean
                use_draft_placeholder:
                  type: boolean
      responses:
        '200':
          description: Task execution started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Bad request, missing fields or incorrect data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user_task_execution_summary:
    post:
      tags:
        - Background
      summary: Update the summary of a user task execution
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - title
                - summary
                - user_task_execution_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                title:
                  type: string
                summary:
                  type: string
                user_task_execution_pk:
                  type: integer
      responses:
        '200':
          description: User task execution summary updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad request, missing or invalid fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error, wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /vocabulary:
    post:
      tags:
        - Application
      summary: Spot special vocabulary in a message
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - message_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                message_pk:
                  type: string
      responses:
        '200':
          description: Special vocabulary spotted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  tagged_text:
                    type: string
        '400':
          description: Bad request, missing fields or request must be JSON
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tags:
        - Application
      summary: Add new vocabulary for a user
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - session_id
                - initial_spelling
                - corrected_spelling
              properties:
                datetime:
                  type: string
                  format: date-time
                session_id:
                  type: string
                initial_spelling:
                  type: string
                corrected_spelling:
                  type: string
      responses:
        '200':
          description: New vocabulary added successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request, missing fields or request must be JSON
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: No message found for this session and this user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /voice:
    get:
      tags:
        - Application
      summary: Retrieve a voice message or welcome text audio for a user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: query
          name: datetime
          required: true
          schema:
            type: string
            format: date-time
          description: Timestamp of the request
        - in: query
          name: message_pk
          required: false
          schema:
            type: string
          description: Primary key of the message
        - in: query
          name: filename
          required: false
          schema:
            type: string
          description: Filename of the welcome text audio
        - in: query
          name: app_version
          required: false
          schema:
            type: string
          description: Version of the application making the request
      responses:
        '200':
          description: Voice message or welcome text audio retrieved successfully
          content:
            audio/*:
              schema:
                type: string
                format: binary
          headers:
            Accept-Ranges:
              schema:
                type: string
        '400':
          description: Error in retrieving voice message or welcome text audio
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error wrong or missing secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /associate_free_product:
    put:
      tags:
        - Application
      summary: Associate a free product with the user
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - datetime
                - product_category_pk
              properties:
                datetime:
                  type: string
                  format: date-time
                product_category_pk:
                  type: integer
      responses:
        '200':
          description: Free product associated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_status:
                    type: string
                  current_product:
                    type: string
        '400':
          description: Error in associating free product
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string


components:
  schemas:
    ProducedText:
      type: object
      properties:
        produced_text_pk:
          type: integer
        user_task_execution_fk:
          type: integer
        production:
          type: string
        title:
          type: string
        creation_date:
          type: string
          format: date-time
        text_type:
          type: string
    PurchasableProduct:
      type: object
      properties:
        product_pk:
          type: integer
        name:
          type: string
        product_stripe_id:
          type: string
        product_apple_id:
          type: string
        n_days_validity:
          type: integer
        n_tasks_limit:
          type: integer
        stripe_price:
          type: integer
        tasks:
          type: array
          items:
            type: string
    CurrentPurchase:
      type: object
      properties:
        product_name:
          type: string
        remaining_days:
          type: integer
        n_validity_days:
          type: integer
        n_tasks_limit:
          type: integer
        n_tasks_consumed:
          type: integer
        tasks:
          type: array
          items:
            type: string
        is_free_product:
          type: boolean
